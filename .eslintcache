[{"/Users/noor/code/projects/capstone/is-covid-there/src/components/covid/Map.js":"1","/Users/noor/code/projects/capstone/is-covid-there/src/components/covid/CovidParentComponent.tsx":"2","/Users/noor/code/projects/capstone/is-covid-there/src/components/api/CovidDataApi.tsx":"3","/Users/noor/code/projects/capstone/is-covid-there/src/components/covid/CategorySearch.js":"4","/Users/noor/code/projects/capstone/is-covid-there/src/components/data/covidCategoriesName.js":"5","/Users/noor/code/projects/capstone/is-covid-there/src/components/covid/CovidSearchState.js":"6"},{"size":2905,"mtime":1612659242509,"results":"7","hashOfConfig":"8"},{"size":853,"mtime":1612656179350,"results":"9","hashOfConfig":"8"},{"size":3467,"mtime":1612658189120,"results":"10","hashOfConfig":"8"},{"size":2544,"mtime":1612655832114,"results":"11","hashOfConfig":"8"},{"size":929,"mtime":1612651905157,"results":"12","hashOfConfig":"8"},{"size":3476,"mtime":1612656157361,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11kg8ic",{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/noor/code/projects/capstone/is-covid-there/src/components/covid/Map.js",["27","28","29","30","31"],"/Users/noor/code/projects/capstone/is-covid-there/src/components/covid/CovidParentComponent.tsx",["32","33","34","35","36"],"/Users/noor/code/projects/capstone/is-covid-there/src/components/api/CovidDataApi.tsx",["37","38","39","40","41"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport MapChart from '../covid/Map';\nimport Spinner from 'react-bootstrap/Spinner'\nimport CategorySearch from '../covid/CategorySearch'\nimport ReactTooltip from \"react-tooltip\";\nimport { categoriesObj} from '../data/covidCategoriesName'\n\n\ntype CovidDataState = {\n    fips_code: number,\n    State_name: string,\n    County: string,\n    Cases_7_day_count_change: number,\n    deaths_7_day_count_change: number,\n    population_density_2019: number,\n    avg_hh_size: number,\n    percent_uninsured_2019: number,\n    poverty_rate_2019: number,\n    Percent_65_plus: number,\n    Case_death_start_date: Date, //just for us\n    Case_death_end_date: Date, //just for us\n    Testing_start_date: Date, //just for us\n    Testing_end_date: Date, //just for us\n    Hospital_data_collection_date: Date, //just for us\n    total_hospitals_reporting: number,\n    admissions_covid_confirmed_last_7_days: number,\n    admissions_covid_confirmed_last_7_days_per_100_beds: number,\n    percent_adult_inpatient_beds_used_confirmed_covid: number,\n    Hospitals_included_in_percent_adult_inpatient_beds_used_confirmed_covid: number, //just for us\n    percent_adult_icu_beds_used_confirmed_covid: number,\n    Hospitals_included_in_percent_adult_icu_beds_used_confirmed_covid: number, //just for us\n    percent_positive_14_day: number,\n    school_composite: string\n\n}\n\ninterface covidProps{\n    stateName: string;\n    countyName: string;\n    info: keyof CovidDataState;\n    map?: boolean\n}\n\nconst CovidData = (prop:covidProps) => {\n    const [covid, SetCovid] = useState<CovidDataState[]>([])\n    const [errorMessage,SetErrorMessage] = useState(null)\n    const [loading, setLoading] = useState(true)\n    const [field, setField] = useState('')\n    const [content, setContent] = useState(\"\");\n    const [center, setCenter] = useState('')\n\n\n\n    useEffect(() => {\n        axios.get(\"https://covid-cdc-api.herokuapp.com/covid-data\")\n        .then((response) => {\n            const apiCovidData = response.data.integrated_county_latest_external_data;\n            SetCovid(apiCovidData);\n            setLoading(false);\n\n        })\n        .catch((error) => {\n            SetErrorMessage(error.message);\n            // console.log(errorMessage);\n        })\n    }, []);\n\n    const fieldSelected = (category:string) :any => {\n        setField(category)\n    }\n\n\n\n    const testing:string = \"Washington\"\n    // setCenter(testing)\n\n    if(prop.map){\n        return(\n            <div>\n                Select a Categories\n                {/* we need to reword the categories */}\n                <CategorySearch  onFieldSelected={fieldSelected}/> \n\n                {loading? \n                    <Spinner animation=\"border\" role=\"status\" variant=\"primary\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </Spinner> : <div>\n                        <MapChart data={covid} field={field} setTooltipContent={setContent} center={\"Washington\"}/> \n                    <ReactTooltip>{content}</ReactTooltip></div>}\n                {/* <MapChart data={covid} /> */}\n                \n            </div>\n        )\n    }\n\n    let covidData = covid.find(state => state.State_name === prop.stateName && state.County === prop.countyName);\n    if(!covidData)\n        return <p>Data not found!</p>\n\n    return(\n        <div>\n            {covidData[prop.info]}\n        </div>\n    )\n\n\n};\n\n\nexport default CovidData;","/Users/noor/code/projects/capstone/is-covid-there/src/components/covid/CategorySearch.js",["42"],"/Users/noor/code/projects/capstone/is-covid-there/src/components/data/covidCategoriesName.js",[],"/Users/noor/code/projects/capstone/is-covid-there/src/components/covid/CovidSearchState.js",["43"],{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":21},{"ruleId":"44","severity":1,"message":"48","line":1,"column":23,"nodeType":"46","messageId":"47","endLine":1,"endColumn":31},{"ruleId":"44","severity":1,"message":"49","line":1,"column":33,"nodeType":"46","messageId":"47","endLine":1,"endColumn":42},{"ruleId":"50","severity":1,"message":"51","line":43,"column":49,"nodeType":"52","messageId":"53","endLine":43,"endColumn":51},{"ruleId":"44","severity":1,"message":"54","line":51,"column":35,"nodeType":"46","messageId":"47","endLine":51,"endColumn":37},{"ruleId":"55","severity":1,"message":"56","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":16},{"ruleId":"55","severity":1,"message":"57","line":5,"column":10,"nodeType":"46","messageId":"47","endLine":5,"endColumn":18},{"ruleId":"55","severity":1,"message":"58","line":5,"column":20,"nodeType":"46","messageId":"47","endLine":5,"endColumn":34},{"ruleId":"55","severity":1,"message":"59","line":9,"column":12,"nodeType":"46","messageId":"47","endLine":9,"endColumn":17},{"ruleId":"55","severity":1,"message":"60","line":10,"column":12,"nodeType":"46","messageId":"47","endLine":10,"endColumn":18},{"ruleId":"55","severity":1,"message":"61","line":7,"column":10,"nodeType":"46","messageId":"47","endLine":7,"endColumn":23},{"ruleId":"55","severity":1,"message":"62","line":47,"column":12,"nodeType":"46","messageId":"47","endLine":47,"endColumn":24},{"ruleId":"55","severity":1,"message":"63","line":51,"column":12,"nodeType":"46","messageId":"47","endLine":51,"endColumn":18},{"ruleId":"55","severity":1,"message":"64","line":51,"column":20,"nodeType":"46","messageId":"47","endLine":51,"endColumn":29},{"ruleId":"55","severity":1,"message":"65","line":75,"column":11,"nodeType":"46","messageId":"47","endLine":75,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":12,"column":5,"nodeType":"68","endLine":19,"endColumn":6},{"ruleId":"66","severity":1,"message":"67","line":13,"column":5,"nodeType":"68","endLine":20,"endColumn":6},"no-unused-vars","'memo' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'id' is assigned a value but never used.","@typescript-eslint/no-unused-vars","'MapChart' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'state' is assigned a value but never used.","'county' is assigned a value but never used.","'categoriesObj' is defined but never used.","'errorMessage' is assigned a value but never used.","'center' is assigned a value but never used.","'setCenter' is assigned a value but never used.","'testing' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]