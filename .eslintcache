[{"/Users/noor/code/projects/capstone/is-covid-there/src/App.tsx":"1","/Users/noor/code/projects/capstone/is-covid-there/src/components/api/CovidDataApi.tsx":"2","/Users/noor/code/projects/capstone/is-covid-there/src/components/api/VaccineDataApi.tsx":"3","/Users/noor/code/projects/capstone/is-covid-there/src/index.tsx":"4","/Users/noor/code/projects/capstone/is-covid-there/src/components/Footer.tsx":"5","/Users/noor/code/projects/capstone/is-covid-there/src/components/covid/CovidParentComponent.tsx":"6","/Users/noor/code/projects/capstone/is-covid-there/src/components/home/HomeParentComponent.tsx":"7","/Users/noor/code/projects/capstone/is-covid-there/src/components/vaccine/VaccineParentComponent.tsx":"8"},{"size":1400,"mtime":1612220824603,"results":"9","hashOfConfig":"10"},{"size":2658,"mtime":1612167288816,"results":"11","hashOfConfig":"10"},{"size":2522,"mtime":1612210148988,"results":"12","hashOfConfig":"10"},{"size":500,"mtime":1611966767190,"results":"13","hashOfConfig":"10"},{"size":266,"mtime":1612219608039,"results":"14","hashOfConfig":"10"},{"size":180,"mtime":1612220406564,"results":"15","hashOfConfig":"10"},{"size":228,"mtime":1612223243831,"results":"16","hashOfConfig":"10"},{"size":186,"mtime":1612220325071,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11kg8ic",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/noor/code/projects/capstone/is-covid-there/src/App.tsx",["36","37","38"],"/Users/noor/code/projects/capstone/is-covid-there/src/components/api/CovidDataApi.tsx",["39"],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\ntype CovidDataState = {\n    State_name: string,\n    County: string,\n    Cases_7_day_count_change: number,\n    deaths_7_day_count_change: number,\n    population_density_2019: number,\n    avg_hh_size: number,\n    percent_uninsured_2019: number,\n    poverty_rate_2019: number,\n    Percent_65_plus: number,\n    Case_death_start_date: Date, //just for us\n    Case_death_end_date: Date, //just for us\n    Testing_start_date: Date, //just for us\n    Testing_end_date: Date, //just for us\n    Hospital_data_collection_date: Date, //just for us\n    total_hospitals_reporting: number,\n    admissions_covid_confirmed_last_7_days: number,\n    admissions_covid_confirmed_last_7_days_per_100_beds: number,\n    percent_adult_inpatient_beds_used_confirmed_covid: number,\n    Hospitals_included_in_percent_adult_inpatient_beds_used_confirmed_covid: number, //just for us\n    percent_adult_icu_beds_used_confirmed_covid: number,\n    Hospitals_included_in_percent_adult_icu_beds_used_confirmed_covid: number, //just for us\n    percent_positive_14_day: number,\n    school_composite: string\n\n}\n\ninterface covidProps{\n    stateName: string;\n    countyName: string;\n    covidProperty: keyof CovidDataState;\n    map?: boolean\n}\n\nconst CovidData = (prop:covidProps) => {\n    const [covid, SetCovid] = useState<CovidDataState[]>([])\n    const [errorMessage,SetErrorMessage] = useState(null)\n\n    useEffect(() => {\n        axios.get(\"https://covid-cdc-api.herokuapp.com/covid-data\")\n        .then((response) => {\n            const apiCovidData = response.data.integrated_county_latest_external_data;\n            SetCovid(apiCovidData);\n        })\n        .catch((error) => {\n            SetErrorMessage(error.message);\n            console.log(errorMessage);\n        })\n    }, []);\n\n    // Use this only for Maps\n    if(prop.map){\n        const covidListMap = covid.map((state: CovidDataState, i): any => {\n            return(\n                <li>\n                    {state.County}, \n                    {state.State_name}, \n                    {state.Cases_7_day_count_change}, \n                    {state.deaths_7_day_count_change};\n                </li>\n            )\n        })\n\n        return(\n            <div>\n                {covidListMap}\n            </div>\n        )}\n\n        let covidData = covid.find(state => state.State_name === prop.stateName && state.County === prop.countyName);\n        if(!covidData)\n            return <p>Data not found!</p>\n\n        return(\n            <div>\n                {covidData[prop.covidProperty]}\n            </div>\n        )\n\n};\n\n\nexport default CovidData;","/Users/noor/code/projects/capstone/is-covid-there/src/components/api/VaccineDataApi.tsx",["40"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\n// define the data type of what we are receiving from the API\ntype VaccineDataState = {\n    Date: Date,\n    Location: string,\n    LongName: string,\n    Doses_Distributed: number,\n    Doses_Administered: number,\n    Dist_Per_100K: number,\n    Admin_Per_100K: number,\n    Administered_Dose1: number,\n    Administered_Dose1_Per_100K: number,\n    Administered_Dose2: number,\n    Administered_Dose2_Per_100K: number,\n}\n// before we write the function we need to define it's arguments(or parameters) by using interface\n// funtion(stateName,info)return that info for that state\ninterface vaccineProps{\n    stateName: string;\n    info: keyof VaccineDataState;  //one of the keys of VaccineDataState type\n    map?: boolean\n}\n\n\n// one huge function that does everything!\nconst VaccineData = (prop:vaccineProps) => {\n    // create useState variable to capture the data as state (because it changes)\n    // useState is setting a variable and then making that variable change\n    const [vaccine, setVaccine] = useState<VaccineDataState[]>([])\n    const [errorMessage, SetErrorMessage] = useState(null)\n\n    // get the data from API in AXIO, useEffect\n    useEffect(() => {\n        axios.get(\"https://covid-cdc-api.herokuapp.com/vaccines\")\n        // store the data from API useState (it will keep changing daily because data is updated daily)\n        .then((response) => {\n            const tempVaccine = response.data.vaccination_data;\n            setVaccine(tempVaccine);\n        })\n        .catch((error) => {\n            SetErrorMessage(error.message)\n            console.log(errorMessage)\n        })\n    }, []);\n    // we need the data to be designed properly in order to easily be displayed in a map\n    if(prop.map){\n        const vaccineListMap = vaccine.map((state: VaccineDataState, i): any =>{\n            return(\n                <li>\n                    {state.LongName}, \n                    {state.Date},\n                    {state.Doses_Administered}\n                </li>\n            )\n        })\n\n        return(\n            <div>\n                {vaccineListMap}\n            </div>\n        )\n    }\n\n    // create a function (state, info) it will return the info for that specific state\n    let vaccineData = vaccine.find(state => state.LongName === prop.stateName);\n    if(!vaccineData)\n    return <p> Data not found! </p>\n\n    return(\n        <div>\n            {vaccineData[prop.info]}\n        </div>\n    )\n}\n\n\n\nexport default VaccineData","/Users/noor/code/projects/capstone/is-covid-there/src/index.tsx",[],"/Users/noor/code/projects/capstone/is-covid-there/src/components/Footer.tsx",[],"/Users/noor/code/projects/capstone/is-covid-there/src/components/covid/CovidParentComponent.tsx",[],"/Users/noor/code/projects/capstone/is-covid-there/src/components/home/HomeParentComponent.tsx",[],"/Users/noor/code/projects/capstone/is-covid-there/src/components/vaccine/VaccineParentComponent.tsx",[],{"ruleId":"41","severity":1,"message":"42","line":3,"column":10,"nodeType":"43","messageId":"44","endLine":3,"endColumn":16},{"ruleId":"41","severity":1,"message":"45","line":5,"column":8,"nodeType":"43","messageId":"44","endLine":5,"endColumn":17},{"ruleId":"41","severity":1,"message":"46","line":6,"column":8,"nodeType":"43","messageId":"44","endLine":6,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":52,"column":8,"nodeType":"49","endLine":52,"endColumn":10,"suggestions":"50"},{"ruleId":"47","severity":1,"message":"48","line":46,"column":8,"nodeType":"49","endLine":46,"endColumn":10,"suggestions":"51"},"@typescript-eslint/no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'CovidData' is defined but never used.","'VaccineData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'errorMessage'. Either include it or remove the dependency array.","ArrayExpression",["52"],["53"],{"desc":"54","fix":"55"},{"desc":"54","fix":"56"},"Update the dependencies array to be: [errorMessage]",{"range":"57","text":"58"},{"range":"59","text":"58"},[1829,1831],"[errorMessage]",[1677,1679]]