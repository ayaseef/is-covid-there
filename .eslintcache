[{"/Users/ayesha/Development/ADA/is-covid-there/src/components/covid/Map.js":"1","/Users/ayesha/Development/ADA/is-covid-there/src/components/vaccine/VaccineMap.js":"2","/Users/ayesha/Development/ADA/is-covid-there/src/components/vaccine/VaccineParentComponent.tsx":"3","/Users/ayesha/Development/ADA/is-covid-there/src/components/vaccine/VaccineSearchState.js":"4","/Users/ayesha/Development/ADA/is-covid-there/src/components/covid/CovidParentComponent.tsx":"5"},{"size":3825,"mtime":1613159879391,"results":"6","hashOfConfig":"7"},{"size":4729,"mtime":1613158016074,"results":"8","hashOfConfig":"7"},{"size":2305,"mtime":1613158722711,"results":"9","hashOfConfig":"7"},{"size":2493,"mtime":1613159391641,"results":"10","hashOfConfig":"7"},{"size":5403,"mtime":1613159955514,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1bivejh",{"filePath":"14","messages":"15","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},"/Users/ayesha/Development/ADA/is-covid-there/src/components/covid/Map.js",["24","25","26","27","28","29","30","31"],"/Users/ayesha/Development/ADA/is-covid-there/src/components/vaccine/VaccineMap.js",["32","33","34","35","36","37","38","39","40"],"/Users/ayesha/Development/ADA/is-covid-there/src/components/vaccine/VaccineParentComponent.tsx",["41","42","43","44","45"],"import React, { useState } from 'react';\nimport VaccineData from '../api/VaccineDataApi';\nimport VaccineSearchState from './VaccineSearchState';\nimport { Dropdown, DropdownButton, Card, ListGroup, ListGroupItem, CardDeck} from 'react-bootstrap';\nimport { FaSyringe } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport './vaccineMap.css'\n\n\n\nconst VaccineComponenet = () :any => {\n    const [state, setState] = useState(\"\")\n    const stateSelected = (stateName:string) :any => {\n        setState(stateName)\n    }\n    return(\n        <div className=\"mainDivFlex\">\n            <div className=\"mapDiv\">\n                <VaccineData map={true} />\n            </div>\n\n            <div className=\"infoDiv\">\n                <VaccineSearchState onStateSelected={stateSelected}/>\n                <br/>\n            {state?\n            <Card>\n                <IconContext.Provider value={{ color: \"gray\", size: \"5em\", className: \"global-class-name\" }}>\n                <div>\n                <FaSyringe />\n                </div>\n                </IconContext.Provider>\n                    <Card.Body>\n                    <Card.Title>Vaccine </Card.Title>\n                    <hr/>\n                    <Card.Text>\n                        Doses Distributed:<span> </span>\n                        <VaccineData stateName={state} info={'Doses_Distributed'}/>\n                        <hr/>\n                        Doses Administrated:<span> </span>\n                        <VaccineData stateName={state} info={'Doses_Administered'}/>\n                        <hr/>\n                        Distribution of Dose 1 :<span> </span>\n                        <VaccineData stateName={state} info={'Administered_Dose1'}/>\n                        <hr/>\n                        Distribution of Dose 2:<span> </span>\n                        <VaccineData stateName={state} info={'Administered_Dose2'}/>                            \n                    \n                    </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                    <small className=\"text-muted\">Last updated on <VaccineData stateName={state}  info={'Date'}/></small>\n                    </Card.Footer>\n                </Card> : null}\n            </div>\n        </div>\n    )\n}\n\nexport default VaccineComponenet;","/Users/ayesha/Development/ADA/is-covid-there/src/components/vaccine/VaccineSearchState.js",["46"],"/Users/ayesha/Development/ADA/is-covid-there/src/components/covid/CovidParentComponent.tsx",["47","48","49","50","51","52","53","54"],"import React, { useState } from 'react';\nimport CovidSearchState from './CovidSearchState';\nimport MapChart from './Map';\nimport CovidData from '../api/CovidDataApi';\nimport { Dropdown, DropdownButton, Card, ListGroup, ListGroupItem, CardDeck} from 'react-bootstrap';\nimport moment from 'moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { FaUserFriends, FaClinicMedical } from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport './Covid.css'\n\n\n\nconst CovidComponenet = () :any => {\n    const [state, setState] = useState(\"\");\n    const [county, setCounty] = useState(\"\");\n\n    const stateSelected = (stateName:string) :any => {\n        setState(stateName)\n    }\n    const countySelected = (countyName:string) :any => {\n        setCounty(countyName)\n    }\n\n    return(\n        <div className=\"mainDivFlex\">\n            <div className=\"mapDiv\">\n    \n            <CovidData map={true} />\n            </div>\n            <div className=\"infoDiv\">\n            <CovidSearchState onStateSelected={stateSelected} onCountySelected={countySelected}/>\n            {county?\n                <div><h4>{county} County Overview </h4>\n                <hr/> \n                <CardDeck>\n                    <Card>\n                    <IconContext.Provider value={{ color: \"gray\", size: \"5em\", className: \"global-class-name\" }}>\n                    <div>\n                    <FaClinicMedical />\n                    </div>\n                    </IconContext.Provider>\n                        <Card.Body>\n                        <Card.Title>Hospital </Card.Title>\n                        <hr/>\n                        <Card.Text>\n                            Number of Reporting Hospitals:<span> </span>\n                            <CovidData stateName={state} countyName={county} info={'total_hospitals_reporting'}/>\n                            <hr/>\n                            Change of Covid Cases in 7 days:<span> </span> <CovidData stateName={state} countyName={county} info={'Cases_7_day_count_change'}/>\n                            <hr/>\n                            Change of Covid Deaths in 7 days:<span> </span><CovidData stateName={state} countyName={county} info={'deaths_7_day_count_change'}/>\n                            <hr/>\n                            Confirmed Covid Addmissions in the Last 7 Days:<span> </span><CovidData stateName={state} countyName={county} info={'admissions_covid_confirmed_last_7_days'}/>\n                            <hr/>\n                            Percentage of Inpatient Beds Used for Confirmed COVID Adults cases:<span> </span><CovidData stateName={state} countyName={county} info={'percent_adult_inpatient_beds_used_confirmed_covid'}/>%\n                            <hr/>\n                            Percentage of ICU Beds Used for Confirmed COVID Adults Cases:<span> </span> <CovidData stateName={state} countyName={county} info={'percent_adult_icu_beds_used_confirmed_covid'}/>%\n                        </Card.Text>\n                        </Card.Body>\n                        <Card.Footer>\n                        <small className=\"text-muted\">Last updated on <CovidData stateName={state} countyName={county} info={'report_date'}/></small>\n                        </Card.Footer>\n                    </Card>\n\n                    <Card>\n                    <IconContext.Provider value={{ color: \"gray\", size: \"5em\", className: \"global-class-name\" }}>\n                    <div>\n                    <FaUserFriends />\n                    </div>\n                    </IconContext.Provider>\n                        <Card.Body>\n                        <Card.Title>Community</Card.Title>\n                        <hr/>\n                        <Card.Text>\n                        Population Density in 2019:<span> </span>\n                        <CovidData stateName={state} countyName={county} info={'population_density_2019'}/>\n                        <hr/>\n                        Average Household Size:<span> </span>\n                        <CovidData stateName={state} countyName={county} info={'avg_hh_size'}/>\n                        <hr/>\n                        Percent of Uninsured Population in 2019:<span> </span>\n                        <CovidData stateName={state} countyName={county} info={'percent_uninsured_2019'}/>\n                        <hr/>\n                        Poverty Rate 2019:<span> </span>\n                        <CovidData stateName={state} countyName={county} info={'poverty_rate_2019'}/>\n                        <hr/>\n                        Percent  of 65 plus:<span> </span>\n                        <CovidData stateName={state} countyName={county} info={'percent_65_plus'}/>\n                        <hr/>\n                        School COVID Risk Info:<span> </span>\n                        <CovidData stateName={state} countyName={county} info={'school_composite'}/>\n                        </Card.Text>\n                        </Card.Body>\n                        <Card.Footer>\n                        <small className=\"text-muted\">Last updated on <CovidData stateName={state} countyName={county} info={'report_date'}/></small>\n                        </Card.Footer>\n                    </Card>\n                </CardDeck>\n                </div>: null\n            }\n            </div>\n        </div>\n    )\n}\n\nexport default CovidComponenet;",{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":21},{"ruleId":"55","severity":1,"message":"59","line":1,"column":33,"nodeType":"57","messageId":"58","endLine":1,"endColumn":42},{"ruleId":"55","severity":1,"message":"60","line":2,"column":49,"nodeType":"57","messageId":"58","endLine":2,"endColumn":62},{"ruleId":"55","severity":1,"message":"61","line":34,"column":18,"nodeType":"57","messageId":"58","endLine":34,"endColumn":30},{"ruleId":"55","severity":1,"message":"62","line":39,"column":18,"nodeType":"57","messageId":"58","endLine":39,"endColumn":31},{"ruleId":"55","severity":1,"message":"63","line":44,"column":18,"nodeType":"57","messageId":"58","endLine":44,"endColumn":31},{"ruleId":"64","severity":1,"message":"65","line":61,"column":49,"nodeType":"66","messageId":"67","endLine":61,"endColumn":51},{"ruleId":"55","severity":1,"message":"68","line":69,"column":35,"nodeType":"57","messageId":"58","endLine":69,"endColumn":37},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":21},{"ruleId":"55","severity":1,"message":"59","line":1,"column":33,"nodeType":"57","messageId":"58","endLine":1,"endColumn":42},{"ruleId":"55","severity":1,"message":"60","line":2,"column":49,"nodeType":"57","messageId":"58","endLine":2,"endColumn":62},{"ruleId":"55","severity":1,"message":"69","line":4,"column":8,"nodeType":"57","messageId":"58","endLine":4,"endColumn":16},{"ruleId":"55","severity":1,"message":"70","line":12,"column":12,"nodeType":"57","messageId":"58","endLine":12,"endColumn":16},{"ruleId":"55","severity":1,"message":"71","line":12,"column":18,"nodeType":"57","messageId":"58","endLine":12,"endColumn":25},{"ruleId":"55","severity":1,"message":"72","line":52,"column":18,"nodeType":"57","messageId":"58","endLine":52,"endColumn":33},{"ruleId":"55","severity":1,"message":"63","line":57,"column":18,"nodeType":"57","messageId":"58","endLine":57,"endColumn":31},{"ruleId":"55","severity":1,"message":"73","line":62,"column":18,"nodeType":"57","messageId":"58","endLine":62,"endColumn":38},{"ruleId":"74","severity":1,"message":"75","line":4,"column":10,"nodeType":"57","messageId":"58","endLine":4,"endColumn":18},{"ruleId":"74","severity":1,"message":"76","line":4,"column":20,"nodeType":"57","messageId":"58","endLine":4,"endColumn":34},{"ruleId":"74","severity":1,"message":"77","line":4,"column":42,"nodeType":"57","messageId":"58","endLine":4,"endColumn":51},{"ruleId":"74","severity":1,"message":"78","line":4,"column":53,"nodeType":"57","messageId":"58","endLine":4,"endColumn":66},{"ruleId":"74","severity":1,"message":"79","line":4,"column":68,"nodeType":"57","messageId":"58","endLine":4,"endColumn":76},{"ruleId":"80","severity":1,"message":"81","line":13,"column":5,"nodeType":"82","endLine":20,"endColumn":6},{"ruleId":"74","severity":1,"message":"83","line":3,"column":8,"nodeType":"57","messageId":"58","endLine":3,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":5,"column":10,"nodeType":"57","messageId":"58","endLine":5,"endColumn":18},{"ruleId":"74","severity":1,"message":"76","line":5,"column":20,"nodeType":"57","messageId":"58","endLine":5,"endColumn":34},{"ruleId":"74","severity":1,"message":"77","line":5,"column":42,"nodeType":"57","messageId":"58","endLine":5,"endColumn":51},{"ruleId":"74","severity":1,"message":"78","line":5,"column":53,"nodeType":"57","messageId":"58","endLine":5,"endColumn":66},{"ruleId":"74","severity":1,"message":"84","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":14},{"ruleId":"74","severity":1,"message":"85","line":7,"column":10,"nodeType":"57","messageId":"58","endLine":7,"endColumn":25},{"ruleId":"74","severity":1,"message":"86","line":8,"column":10,"nodeType":"57","messageId":"58","endLine":8,"endColumn":18},"no-unused-vars","'memo' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'ZoomableGroup' is defined but never used.","'handleZoomIn' is defined but never used.","'handleZoomOut' is defined but never used.","'handleMoveEnd' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'id' is assigned a value but never used.","'allState' is defined but never used.","'zoom' is assigned a value but never used.","'setZoom' is assigned a value but never used.","'handleMoveStart' is defined but never used.","'handleGeographyClick' is defined but never used.","@typescript-eslint/no-unused-vars","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'CardDeck' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'MapChart' is defined but never used.","'moment' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCoffee' is defined but never used."]